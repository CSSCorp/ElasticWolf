<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<!DOCTYPE window SYSTEM "chrome://ew/locale/ew.dtd">

<dialog id="ew.dialog.registerImageFromSnapshot.instructions"
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  xmlns:html="http://www.w3.org/1999/xhtml"
  buttons="accept,cancel"
  ondialogaccept="return registerImage();"
  ondialogcancel="return true;"
  onload="init();"
  title="Register AMI from Snapshot">

  <script type="application/x-javascript">
  <![CDATA[

    function registerImage() {
        this.retVal.amiName = (document.getElementById('ew.amiName').value || '').trim();

        var amiDescription = (document.getElementById('ew.amiDescription').value || '').trim();
        if (amiDescription) { this.retVal.amiDescription = amiDescription; }

        this.retVal.architecture = document.getElementById('ew.architecture').selectedItem.value;

        var kernelId = (document.getElementById('ew.kernelId').value || '').trim();
        if (kernelId) { this.retVal.kernelId = kernelId; }

        var ramdiskId = (document.getElementById('ew.ramdiskId').value || '').trim();
        if (ramdiskId) { this.retVal.ramdiskId = ramdiskId; }

        this.retVal.deviceName = (document.getElementById('ew.deviceName').value || '').trim();
        this.retVal.deleteOnTermination = (!!document.getElementById('ew.deleteOnTerm').checked).toString();

        var regex = new RegExp("^[.0-9a-zA-Z\_\(\)\,\/\-]{3,128}$");
        if (!this.retVal.amiName.match(regex)) {
            alert ("The AMI Name is not formatted properly; it must be 3-128 characters "+
                   "in length containing alphanumerics, parantheses, commas, slashes, dashes, and underscores.");
            return false;
        }

        if (!this.retVal.deviceName) {
            alert("You must enter a device name (e.g. /dev/sda1)");
            return false;
        }

        this.retVal.ok = true;
        return true;
    }

    function init() {
        this.id = window.arguments[0];
        this.ew_session = window.arguments[1];
        this.retVal = window.arguments[2];

        document.getElementById("ew.snapshotid").value = this.id;
        document.getElementById("ew.amiName").select();
    }

  ]]>
  </script>

  <vbox flex="1">
    <grid flex="1">
      <columns>
        <column />
        <column />
      </columns>
      <rows>
        <row>
          <label control="ew.snapshotid" value="Snapshot ID:" />
          <textbox id="ew.snapshotid" readonly="true" />
        </row>
        <row>
          <label control="ew.amiName" value="AMI Name:" />
          <textbox type="autocomplete" autocompletesearch="form-history" id="ew.amiName" size="30" value="" />
        </row>
        <row>
          <label control="ew.amiDescription" value="AMI Description:" />
          <textbox type="autocomplete" autocompletesearch="form-history" id="ew.amiDescription" size="30" value="" />
        </row>
        <row>
          <label control="ew.architecture" value="Architecture:" />
          <menulist id="ew.architecture">
            <menupopup>
              <menuitem label="i386" value="i386" />
              <menuitem label="x86_64" value="x86_64" />
            </menupopup>
          </menulist>
        </row>
        <row>
          <label control="ew.kernelId" value="Kernel ID:" />
          <textbox type="autocomplete" autocompletesearch="form-history" id="ew.kernelId" size="30" value="" />
        </row>
        <row>
          <label control="ew.ramdiskId" value="Ramdisk ID:" />
          <textbox type="autocomplete" autocompletesearch="form-history" id="ew.ramdiskId" size="30" value="" />
        </row>
        <row>
          <label control="ew.deviceName" value="Device Name:" />
          <textbox type="autocomplete" autocompletesearch="form-history" id="ew.deviceName" size="30" value="/dev/sda1" />
        </row>
        <row>
          <label control="ew.deleteOnTerm" value="Delete On Termination: " />
          <checkbox id="ew.deleteOnTerm" checked="true" />
        </row>
       </rows>
    </grid>
  </vbox>
</dialog>
